{
	"credit": "Created by FreshLX for Fresh Animations",
	"textureSize": [64, 64],
	"models": [
		{
			"part": "head",
			"id": "head",
			"invertAxis": "xy",
			"translate": [0, -22, 9],
			"submodels": [
				{
					"id": "Created_by_FreshLX_for_Fresh_Animations",
					"invertAxis": "xy",
					"translate": [0, 0, 0]
				}
			],
			"animations": [
				{
					"var.hy": "clamp(head_yaw,-90,90)",
					"var.testing": "0",
					"var.child_scale": "if(is_child, 0.5, 1)",
					"var.rearing": "if(head_parts.ty<4, -(head_parts.ty-4)/8*(1-var.testing), 0)",
					"var.ls": " limb_swing*0.75/if(is_child, 1.8, 1)",
					"var.r": "random(id)*pi*4",
					"var.k": "(limb_swing/if(!is_on_ground&&is_in_water, 4, 20)+age)",
					"var.b": "   var.k/if(is_child, 35, 70)*pi*2 +var.r",
					"var.swim": "var.k/if(is_child, 10, 15)*pi*2 +var.r",
					"var.run": "    clamp(cos((limb_speed*pi)-pi    )*1.1, 0, 1)",
					"var.walk": "(1-clamp(cos((limb_speed*pi)-pi*1.2)*1.1, 0, 1))",
					"var.walk_speed": "clamp(0.3+limb_speed*4, 0, 1)",
					"var.nov1": "clamp( if( is_in_water || !is_on_ground || head_parts.rx>=torad(90), 0, (0.5-0.5*cos( clamp(( -145.6 +sin(var.r +age/if(is_ridden, 560, 280))*146)*3, 0, 1)*pi )) ), 0, clamp(2-limb_speed*1.5, 0, if(head_parts.rx>=torad(90), 0, 1)) )",
					"var.Lear": "clamp( cos(          var.r +age/20 ) *20 -20 +1 , 0 , clamp( sin( var.r +age/(20*12) )*8 -5 , 0 , 1 ) )",
					"var.Rear": "clamp( cos( pi/1.52 +var.r +age/15 ) *15 -15 +1 , 0 , clamp( sin( var.r +age/(15*12) )*8 -5 , 0 , 1 ) )"
				},
				{
					"body.rx": "if(!is_on_ground&&is_in_water, torad(-5) +sin(pi/4+var.swim)/10, ( (sin(var.ls)/20 -cos(pi/4+var.ls)/16)*limb_speed*if(is_child, 2, 0.7)*(1-var.rearing/if(is_on_ground, 1.2, 3)) )*var.run  +(sin(-pi/4+var.ls*2)/30*var.walk_speed)*var.walk ) +sin(var.b-torad(45))/60 +(-0.7 +sin(var.k/2 +var.r)/25)*var.rearing +( torad(3) )*var.nov1",
					"body.ry": "clamp(torad(var.hy)/10, torad(-5), torad(5))/2",
					"body.rz": "(-sin(var.ls)/40*var.walk_speed)*var.walk +( sin(-pi/4 +var.r+age/1.2)/32 )*var.nov1",
					"body.tx": "( (-sin(var.ls)/16*var.walk_speed)*var.walk ) * var.child_scale",
					"body.ty": "( 11.3 +if(!is_on_ground&&is_in_water, if(is_ridden, 1, 7), (cos(var.ls +sin(var.ls)/3)*limb_speed*if(is_child, 2, 1)*(1-var.rearing/if(is_on_ground, 2.5, 0.75)))*var.run +( (-cos(var.ls*2) +2)/4*var.walk_speed*if(is_child, 2, 1))*var.walk ) +sin(var.b)/6 ) * var.child_scale +if(is_child, 9.6, 0)",
					"body.tz": "( 5 +if(!is_on_ground&&is_in_water, sin(var.ls*2)/2, (cos(var.ls*2)/4*var.walk_speed)*var.walk ) ) * var.child_scale",
					"neck2.rx": "if(!is_on_ground&&is_in_water, torad(5) -sin(pi/4+var.swim)/8, (cos(var.ls)/10*limb_speed*(1-var.rearing*0.75))*var.run +(cos(var.ls*2)/20*var.walk_speed)*var.walk ) +clamp(head_parts.rx, torad(10), torad(140))*clamp(1-(limb_speed*2), 0, 1) +(torad(45) +torad(head_pitch)/2)*clamp((limb_speed*2), 0, 1) +cos(var.b)/80 +(-body.rx*1.2 +(-torad(30)*limb_speed -cos(var.k/2 +var.r)/25)*var.rearing) +torad(30)*var.nov1",
					"neck2.ry": "clamp(torad(var.hy)/2, torad(-20), torad(20)) +( cos(var.r+age/1.2)/6 )*var.nov1",
					"neck2.rz": "head_parts.rz -body.rz +( cos(var.r+age/1.2)/4 )*var.nov1",
					"neck2.tx": "clamp(-torad(var.hy)*2.5, -2, 2) -( cos(var.r+age/1.2)*1.3 )*var.nov1",
					"neck2.ty": "-20.5 +if(!is_on_ground&&is_in_water, -sin(pi/4+var.swim), (-sin(-pi/4+var.ls)*limb_speed*(1-var.rearing*0.75))*var.run +(cos(var.ls*2)/2*var.walk_speed)*var.walk) +clamp( torad(head_pitch)*3, -2, 4) +limb_speed +var.rearing*2.5 +if(head_parts.ty>4, head_parts.ty-4, 0) +if(is_child, clamp(-2+limb_speed*4, -2, 0) +if(head_parts.rx>=torad(90), 2, 0), 0) +( 2 )*var.nov1 +if(is_child, -7 +if(head_parts.rx>=torad(90), 6, 0), 0)",
					"neck2.tz": "-11.5 +if(!is_on_ground&&is_in_water,  sin(pi/4+var.swim), 0 ) +clamp(-torad(head_pitch)*3, -0, 2) +(1 )*var.nov1",
					"neck2.sx": "if(is_child, 1.1, 1)",
					"neck2.sy": "neck2.sx",
					"neck2.sz": "neck2.sx",
					"head2.rx": "clamp( if(!is_on_ground&&is_in_water, sin(pi/4+var.swim)/10 +torad(-10), (-sin(torad(30)+var.ls)/8*limb_speed*(1-var.rearing*0.75))*var.run +(-cos(var.ls*2)/20*clamp(limb_speed*4, 0, 1)/1.5)*var.walk ) -torad(20)*limb_speed*(1-var.rearing) +if(head_parts.rx>=torad(90), -torad(20), 0), -0.5, 0.006) -torad(30)*var.nov1",
					"head2.ry": "clamp(torad(var.hy)/6, torad(-15), torad(15)) -( sin(var.r+age/1.2)/8 )*var.nov1",
					"head2.rz": "-( sin(var.r+age/1.2)/3   )*var.nov1",
					"head2.tx": " ( sin(var.r+age/1.2)/1.3 )*var.nov1",
					"head2.ty": "-5.5 -2*var.nov1",
					"head2.tz": "2 -1.5*var.nov1"
				},
				{
					"right_saddle.rx": "-body.rx/1.2 +torad(20)*limb_speed +(sin(var.ls)/6*limb_speed)*var.run +(-sin(limb_swing*0.55)/10*limb_speed)*var.walk",
					"left_saddle.rx": "right_saddle.rx",
					"right_saddle.rz": "( abs(sin(var.ls/2))/2*limb_speed)*var.run",
					"left_saddle.rz": "-right_saddle.rz",
					"right_rein2.rx": "-body.rx -neck2.rx -head2.rx +torad(head_pitch)/1.5 +(-cos(var.ls)/8*limb_speed)*var.run +(-sin(var.ls)/40*var.walk_speed)*var.walk +torad(10)*limb_speed",
					"left_rein2.rx": "right_rein2.rx",
					"right_rein2.ry": "torad( 4) -torad(var.hy)/4",
					"left_rein2.ry": " torad(-4) -torad(var.hy)/4",
					"right_rein2.rz": "torad(-5) +clamp(-torad(var.hy)/4, torad(-20), 0)",
					"left_rein2.rz": " torad( 5) +clamp(-torad(var.hy)/4, 0, torad( 20))",
					"right_rein3.rz": "(-abs(sin(pi/4 +var.ls /2))*2*limb_speed +torad(10)*limb_speed)*var.run +(-sin(var.ls)/40*var.walk_speed)*var.walk +sin(limb_swing+var.k/2)*clamp(sin(limb_swing+(var.k/20))/30, 0, 1) +(-sin(var.k/1.5)*2*-var.rearing/2.5)",
					"left_rein3.rz": "-right_rein3.rz",
					"right_rein2.visible": "is_ridden",
					"left_rein2.visible": " is_ridden"
				},
				{
					"saddle_right_part.rx": "right_saddle.rx",
					"saddle_right_part.ry": "right_saddle.ry",
					"saddle_right_part.rz": "right_saddle.rz",
					"saddle_right_part.tx": "right_saddle.tx",
					"saddle_right_part.ty": "right_saddle.ty+13",
					"saddle_right_part.tz": "right_saddle.tz-6",
					"saddle_left_part.rx": "left_saddle.rx",
					"saddle_left_part.ry": "left_saddle.ry",
					"saddle_left_part.rz": "left_saddle.rz",
					"saddle_left_part.tx": "left_saddle.tx",
					"saddle_left_part.ty": "left_saddle.ty+13",
					"saddle_left_part.tz": "left_saddle.tz-6"
				}
			]
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, -13, -6],
			"boxes": [
				{
					"coordinates": [-5, 19.8, -3.5, 10, 1.2, 9],
					"uvNorth": [35, 9, 45, 11],
					"uvEast": [26, 9, 35, 11],
					"uvSouth": [54, 9, 64, 11],
					"uvWest": [45, 9, 54, 11],
					"uvUp": [45, 9, 35, 0],
					"uvDown": [55, 0, 45, 9],
					"sizeAdd": 0.5
				}
			],
			"submodels": [
				{
					"id": "left_saddle",
					"invertAxis": "xy",
					"translate": [-5.4, 20.5, -1.5],
					"boxes": [
						{
							"coordinates": [0.5, -8.25, -0.9, 0, 6.8, 2.35],
							"uvWest": [46, 11, 49, 18],
							"sizeAdd": 0.5
						}
					]
				},
				{
					"id": "right_saddle",
					"invertAxis": "xy",
					"translate": [5.4, 20.5, -1.5],
					"boxes": [
						{
							"coordinates": [-0.5, -8.25, -0.9, 0, 6.8, 2.35],
							"uvEast": [31, 11, 34, 18],
							"sizeAdd": 0.5
						}
					]
				},
				{
					"id": "neck2",
					"invertAxis": "xy",
					"translate": [0, 22, -9],
					"submodels": [
						{
							"id": "head2",
							"invertAxis": "xy",
							"translate": [0, 5.5, 2],
							"boxes": [
								{
									"coordinates": [-3, 1, -7, 1, 2, 2],
									"uvNorth": [31, 7, 32, 9],
									"uvEast": [29, 7, 31, 9],
									"uvSouth": [34, 7, 35, 9],
									"uvWest": [32, 7, 34, 9],
									"uvUp": [32, 7, 31, 5],
									"uvDown": [33, 5, 32, 7]
								},
								{
									"coordinates": [2, 1, -7, 1, 2, 2],
									"uvNorth": [31, 7, 32, 9],
									"uvEast": [29, 7, 31, 9],
									"uvSouth": [34, 7, 35, 9],
									"uvWest": [32, 7, 34, 9],
									"uvUp": [32, 7, 31, 5],
									"uvDown": [33, 5, 32, 7]
								},
								{
									"coordinates": [-2, 0, -6, 4, 5, 2],
									"uvNorth": [21, 2, 25, 7],
									"uvEast": [19, 2, 21, 7],
									"uvSouth": [27, 2, 31, 7],
									"uvWest": [25, 2, 27, 7],
									"uvUp": [25, 2, 21, 0],
									"uvDown": [29, 0, 25, 2],
									"sizeAdd": 0.25
								},
								{
									"coordinates": [-3, 0, -4, 6, 5, 7],
									"uvNorth": [7, 7, 13, 12],
									"uvEast": [0, 7, 7, 12],
									"uvSouth": [20, 7, 26, 12],
									"uvWest": [13, 7, 20, 12],
									"uvUp": [13, 7, 7, 0],
									"uvDown": [19, 0, 13, 7],
									"sizeAdd": 0.25
								}
							],
							"submodels": [
								{
									"id": "right_rein2",
									"invertAxis": "xy",
									"translate": [-3.1, 2.5, -7],
									"rotate": [90, 0, 0],
									"submodels": [
										{
											"id": "right_rein3",
											"invertAxis": "xy",
											"translate": [0, 0, 0],
											"boxes": [
												{
													"coordinates": [0, -2, 0, 0, 3, 16],
													"uvEast": [32, 18, 48, 21],
													"uvWest": [48, 18, 64, 21]
												}
											]
										}
									]
								},
								{
									"id": "left_rein2",
									"invertAxis": "xy",
									"translate": [3.1, 2.5, -7],
									"rotate": [90, 0, 0],
									"submodels": [
										{
											"id": "left_rein3",
											"invertAxis": "xy",
											"translate": [0, 0, 0],
											"boxes": [
												{
													"coordinates": [0, -2, 0, 0, 3, 16],
													"uvEast": [64, 18, 48, 21],
													"uvWest": [48, 18, 32, 21]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"part": "saddle",
			"id": "saddle",
			"invertAxis": "xy",
			"translate": [0, -13, -6]
		},
		{
			"part": "left_front_leg",
			"id": "left_front_leg",
			"invertAxis": "xy",
			"translate": [3, -1, 9]
		},
		{
			"part": "right_front_leg",
			"id": "right_front_leg",
			"invertAxis": "xy",
			"translate": [-3, -1, 9]
		},
		{
			"part": "left_hind_leg",
			"id": "left_hind_leg",
			"invertAxis": "xy",
			"translate": [3, -1, -9]
		},
		{
			"part": "right_hind_leg",
			"id": "right_hind_leg",
			"invertAxis": "xy",
			"translate": [-3, -1, -9]
		},
		{
			"part": "head_saddle",
			"id": "head_saddle",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "left_ear",
			"id": "left_ear",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "right_ear",
			"id": "right_ear",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "head_parts",
			"id": "head_parts",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "upper_mouth",
			"id": "upper_mouth",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "mane",
			"id": "mane",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "mouth_saddle_wrap",
			"id": "mouth_saddle_wrap",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "left_saddle_mouth",
			"id": "left_saddle_mouth",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "right_saddle_mouth",
			"id": "right_saddle_mouth",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "tail",
			"id": "tail",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "left_saddle_line",
			"id": "left_saddle_line",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "right_saddle_line",
			"id": "right_saddle_line",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part":"saddle",
			"id":"saddle_part",
			"model":"zombie_horse_saddle_body.jpm",
			"attach":"true"
		},
		{
			"part":"saddle",
			"id":"saddle_left_part",
			"model":"zombie_horse_saddle_left.jpm",
			"attach":"true"
		},
		{
			"part":"saddle",
			"id":"saddle_right_part",
			"model":"zombie_horse_saddle_right.jpm",
			"attach":"true"
		}
	]
}