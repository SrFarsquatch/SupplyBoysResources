{
	"credit": "Created by FreshLX for Fresh Animations",
	"animations": [
		{
			"var.hy": "clamp(head_yaw,-90,90)",
			"var.r": "random(id)*pi*4",
			"var.testing": "0",
			"var.Created_by_FreshLX_for_Fresh_Animations": "0"
		},
		{
			"body.rx": "torad(20)*limb_speed",
			"body.tx": "-stick1.tx -1",
			"body.ty": "-stick1.ty -24+ if(is_on_ground, 0, sin(var.r+limb_swing/3+age/6)*3)",
			"body.tz": "-stick1.tz +sin(var.r+limb_swing/3+age/10)*2",
			"head2.ty": "-cos(var.r+limb_swing/3+age/6)",
			"head2.rx": "torad(head_pitch)/1.5 -cos(var.r+limb_swing/3+age/10)/10 -body.rx",
			"head2.ry": "torad(var.hy)/2",
			"head2.rz": " sin(var.r+limb_swing/3+age/12)/10",
			"head2.tx": "-cos(var.r+limb_swing/3+age/12)*2",
			"layer1.ry": "-rot_y +var.r +age/if(is_burning, 5, 10)*2+(limb_swing/3) +head2.ry/2",
			"layer2.ry": "-rot_y +var.r -age/if(is_burning, 5, 10)  -(limb_swing/3) +head2.ry/4",
			"layer3.ry": "-rot_y +var.r +age/if(is_burning, 5, 10)  +(limb_swing/3)",
			"layer1.tx": "head2.tx",
			"layer2.tx": "head2.tx/2",
			"layer3.tx": "head2.tx/4",
			"rod1.ry": " torad(45)",
			"rod2.ry": " torad(45) +pi/2",
			"rod3.ry": " torad(45) -pi/2",
			"rod4.ry": " torad(45) +pi",
			"rod5.ry": " torad(45)",
			"rod6.ry": " torad(45) +pi",
			"rod7.ry": " torad(45) -pi/2",
			"rod8.ry": " torad(45) +pi/2",
			"rod9.ry": " torad(45) -pi/2",
			"rod10.ry": "torad(45) +pi",
			"rod11.ry": "torad(45) +pi/2",
			"rod12.ry": "torad(45)",
			"rod1.tx": " 7 + (hurt_time*pi)/8",
			"rod2.tx": "-7 - (hurt_time*pi)/8",
			"rod3.tx": " 7 + (hurt_time*pi)/8",
			"rod4.tx": "-7 - (hurt_time*pi)/8",
			"rod1.tz": " 7 + (hurt_time*pi)/8",
			"rod2.tz": " 7 + (hurt_time*pi)/8",
			"rod3.tz": "-7 - (hurt_time*pi)/8",
			"rod4.tz": "-7 - (hurt_time*pi)/8",
			"rod5.tx": " 5 + (hurt_time*pi)/8",
			"rod6.tx": "-5 - (hurt_time*pi)/8",
			"rod7.tx": " 5 + (hurt_time*pi)/8",
			"rod8.tx": "-5 - (hurt_time*pi)/8",
			"rod5.tz": " 5 + (hurt_time*pi)/8",
			"rod6.tz": " 5 + (hurt_time*pi)/8",
			"rod7.tz": "-5 - (hurt_time*pi)/8",
			"rod8.tz": "-5 - (hurt_time*pi)/8",
			"rod9.tx": " 3 + (hurt_time*pi)/8",
			"rod10.tx": "-3 - (hurt_time*pi)/8",
			"rod11.tx": " 3 + (hurt_time*pi)/8",
			"rod12.tx": "-3 - (hurt_time*pi)/8",
			"rod9.tz": " 3 + (hurt_time*pi)/8",
			"rod10.tz": " 3 + (hurt_time*pi)/8",
			"rod11.tz": "-3 - (hurt_time*pi)/8",
			"rod12.tz": "-3 - (hurt_time*pi)/8",
			"rod1.ty": " stick1.ty +4",
			"rod2.ty": " stick2.ty +4 -26*var.testing",
			"rod3.ty": " stick3.ty +4 -26*var.testing",
			"rod4.ty": " stick4.ty +4 -26*var.testing",
			"rod5.ty": " stick5.ty +6 -23*var.testing",
			"rod6.ty": " stick6.ty +6 -23*var.testing",
			"rod7.ty": " stick7.ty +6 -23*var.testing",
			"rod8.ty": " stick8.ty +6 -23*var.testing",
			"rod9.ty": " stick9.ty +5 -14*var.testing",
			"rod10.ty": "stick10.ty+5 -14*var.testing",
			"rod11.ty": "stick11.ty+5 -14*var.testing",
			"rod12.ty": "stick12.ty+5 -14*var.testing"
		},
		{
			"var.blink": "pow( clamp((1.5 -abs(sin(var.r+age/8)*6))*clamp(-32 +cos((var.r+age/8)/1.5)*40 +cos((var.r+age/8)/4)*40, 0, 1), 0, 1), 2 )",
			"var.eye_top": "   ( clamp(head_pitch/180,  0  , 0.3) +(-1.5 -cos(limb_swing/3)/2)/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) )*(1-var.blink) +var.blink",
			"var.pupil_y": "0.5 +clamp(head_pitch/120, -0.2, 0.5) +(-1.5 -cos(limb_swing/3)/2)/6*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) -clamp(-24 +sin(var.r+age/100)*40, 0, 1)/10",
			"var.pupil_x": "-var.hy/80 +clamp(sin(var.r+age/27) +sin(var.r+age/16), -0.1, 0.1)*clamp(-20*2 -cos(var.r+age/125)*30*2, 0, 1)*clamp(59*4 -sin(var.r+age/187)*60*4, 0, 1)",
			"right_eye.sz": "clamp( sqrt( pow(pos_x-player_pos_x, 2) +pow(pos_y-player_pos_y, 2) +pow(pos_z-player_pos_z, 2) ), 1, 128 )",
			"left_eye.sz": "right_eye.sz",
			"r_eye_white.sy": "clamp(1 -var.eye_top, 0, 3 )",
			"l_eye_white.sy": "r_eye_white.sy",
			"r_eye_white.visible": "r_eye_white.sy!=0",
			"l_eye_white.visible": "l_eye_white.sy!=0",
			"r_pupil.tx": "clamp( var.pupil_x+1,  0, 1 )",
			"l_pupil.tx": "clamp( var.pupil_x-1, -1, 0 )",
			"r_pupil.ty": "clamp( var.pupil_y+0.5, -r_eye_white.sy+0.7, 1 )",
			"l_pupil.ty": "clamp( var.pupil_y+0.5, -l_eye_white.sy+0.7, 1 )",
			"r_pupil.sy": "clamp(1 +var.pupil_y-0.5 +r_eye_white.sy-1, 0, clamp( r_eye_white.sy, 0, clamp(-var.pupil_y+1.5, 0.5, 1) ) )",
			"l_pupil.sy": "clamp(1 +var.pupil_y-0.5 +l_eye_white.sy-1, 0, clamp( l_eye_white.sy, 0, clamp(-var.pupil_y+1.5, 0.5, 1) ) )",
			"r_pupil.sx": "clamp(1 +clamp(-var.pupil_x, -0.2, 0 ), 0.5, 1 )",
			"l_pupil.sx": "clamp(1 +clamp( var.pupil_x, -0.2, 0 ), 0.5, 1 )",
			"r_pupil.visible": "r_pupil.sy!=0",
			"l_pupil.visible": "l_pupil.sy!=0"
		}
	]
}